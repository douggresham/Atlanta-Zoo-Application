
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gresh
 */
public class Visitor_Exhibit_Detail extends javax.swing.JFrame {
    private String exhibitName;
    private int numAnimals;
    private String userEmail;
    
    /**
     * Creates new form Visitor_Exhibit_Detail
     */
    public Visitor_Exhibit_Detail(String email, String name, int num) {
        initComponents();
        this.userEmail = email;
        this.exhibitName = name;
        this.numAnimals = num;
        fillValues();
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        text_size = new java.awt.Label();
        text_name = new java.awt.Label();
        text_num_animals = new java.awt.Label();
        text_exhibit_detail = new java.awt.Label();
        text_atlanta_zoo3 = new java.awt.Label();
        text_water = new java.awt.Label();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton_log_visit = new javax.swing.JButton();
        jTextField_name = new javax.swing.JTextField();
        jTextField_size = new javax.swing.JTextField();
        jTextField_num_animals = new javax.swing.JTextField();
        jTextField_water = new javax.swing.JTextField();
        jButton_log_view = new javax.swing.JButton();
        jButton_home = new javax.swing.JButton();
        jButton_name_up = new javax.swing.JButton();
        jButton_name_down = new javax.swing.JButton();
        jButton_species_up = new javax.swing.JButton();
        jButton_species_down = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        setResizable(false);

        text_size.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        text_size.setText("Size");

        text_name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        text_name.setText("Name");

        text_num_animals.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        text_num_animals.setText("Num Animals");

        text_exhibit_detail.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        text_exhibit_detail.setName(""); // NOI18N
        text_exhibit_detail.setText("Exhibit Detail");

        text_atlanta_zoo3.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        text_atlanta_zoo3.setName(""); // NOI18N
        text_atlanta_zoo3.setText("Atlanta Zoo");

        text_water.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        text_water.setText("Water Feature");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Species"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButton_log_visit.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton_log_visit.setText("Log Visit");
        jButton_log_visit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_log_visitMouseClicked(evt);
            }
        });

        jTextField_name.setEditable(false);

        jTextField_size.setEditable(false);

        jTextField_num_animals.setEditable(false);

        jTextField_water.setEditable(false);

        jButton_log_view.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton_log_view.setText("View");
        jButton_log_view.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_log_viewMouseClicked(evt);
            }
        });

        jButton_home.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton_home.setText("Home");
        jButton_home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_homeMouseClicked(evt);
            }
        });

        jButton_name_up.setBackground(new java.awt.Color(255, 255, 255));
        jButton_name_up.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_name_up.setText("▲");
        jButton_name_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_name_upActionPerformed(evt);
            }
        });

        jButton_name_down.setBackground(new java.awt.Color(255, 255, 255));
        jButton_name_down.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_name_down.setText("▼");
        jButton_name_down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_name_downActionPerformed(evt);
            }
        });

        jButton_species_up.setBackground(new java.awt.Color(255, 255, 255));
        jButton_species_up.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_species_up.setText("▲");
        jButton_species_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_species_upActionPerformed(evt);
            }
        });

        jButton_species_down.setBackground(new java.awt.Color(255, 255, 255));
        jButton_species_down.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_species_down.setText("▼");
        jButton_species_down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_species_downActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(text_atlanta_zoo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(text_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jTextField_name)))
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(text_water, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_water, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(text_exhibit_detail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(text_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_size, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                        .addGap(26, 26, 26)
                        .addComponent(text_num_animals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_num_animals, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                        .addGap(77, 77, 77))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton_log_visit)
                        .addGap(217, 217, 217))))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jButton_log_view)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_home)
                        .addGap(57, 57, 57))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jButton_name_up)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_name_down)
                        .addGap(151, 151, 151)
                        .addComponent(jButton_species_up)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_species_down)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(text_exhibit_detail, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_atlanta_zoo3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(text_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_num_animals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_num_animals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_log_visit)
                            .addComponent(jTextField_water, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_water, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jButton_log_view)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton_name_up)
                                .addComponent(jButton_name_down))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton_species_up)
                                .addComponent(jButton_species_down)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton_home)
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_log_visitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_log_visitMouseClicked
        Date date = new Date();
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "insert into ExhibitVisits (Visitor, ExhibitName, VisitTime)"
            + " values (?, ?, ?)";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, userEmail);
            stmt.setString(2, exhibitName);
            stmt.setObject(3, date);
            stmt.execute();
                
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_log_visitMouseClicked

    private void jButton_log_viewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_log_viewMouseClicked
        int[] rows = jTable1.getSelectedRows();
        int i = 0;
        String name;
        String species;
        Visitor_Animal_Detail ex;
        while (i < rows.length) {
            name = (String)jTable1.getModel().getValueAt(rows[i],0);
            species = (String)jTable1.getModel().getValueAt(rows[i], 1);
            ex = new Visitor_Animal_Detail(name, species, userEmail);
            ex.setVisible(true);
            i++;
        }
        if (rows.length > 0) {
            this.dispose();
        }
        
    }//GEN-LAST:event_jButton_log_viewMouseClicked

    private void jButton_homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_homeMouseClicked
        Visitor_Main main = new Visitor_Main(userEmail);
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton_homeMouseClicked

    private void jButton_name_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_name_upActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Exhibits where Name=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, exhibitName);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(exhibitName);
            jTextField_size.setText("" + rs.getInt("Size"));
            jTextField_num_animals.setText("" + numAnimals);
            jTextField_water.setText(rs.getString("WaterFeature"));
            stmt = null;
            sql = "select * from Animals where ExhibitName=? ORDER BY Name ASC";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, exhibitName);
            rs = stmt.executeQuery();
            int i = 0;
            String value;
            while (rs.next()) {
                for (int j = 0; j < 2; j++) {
                    if (j == 0) {
                        value = rs.getString("Name");
                    } else {
                       value = rs.getString("Species");
                    }
                    jTable1.getModel().setValueAt(value, i, j);
                }
                i++;
            }
                
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_name_upActionPerformed

    private void jButton_name_downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_name_downActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Exhibits where Name=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, exhibitName);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(exhibitName);
            jTextField_size.setText("" + rs.getInt("Size"));
            jTextField_num_animals.setText("" + numAnimals);
            jTextField_water.setText(rs.getString("WaterFeature"));
            stmt = null;
            sql = "select * from Animals where ExhibitName=? ORDER BY Name DESC";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, exhibitName);
            rs = stmt.executeQuery();
            int i = 0;
            String value;
            while (rs.next()) {
                for (int j = 0; j < 2; j++) {
                    if (j == 0) {
                        value = rs.getString("Name");
                    } else {
                       value = rs.getString("Species");
                    }
                    jTable1.getModel().setValueAt(value, i, j);
                }
                i++;
            }
                
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_name_downActionPerformed

    private void jButton_species_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_species_upActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Exhibits where Name=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, exhibitName);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(exhibitName);
            jTextField_size.setText("" + rs.getInt("Size"));
            jTextField_num_animals.setText("" + numAnimals);
            jTextField_water.setText(rs.getString("WaterFeature"));
            stmt = null;
            sql = "select * from Animals where ExhibitName=? ORDER BY Species ASC";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, exhibitName);
            rs = stmt.executeQuery();
            int i = 0;
            String value;
            while (rs.next()) {
                for (int j = 0; j < 2; j++) {
                    if (j == 0) {
                        value = rs.getString("Name");
                    } else {
                       value = rs.getString("Species");
                    }
                    jTable1.getModel().setValueAt(value, i, j);
                }
                i++;
            }
                
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_species_upActionPerformed

    private void jButton_species_downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_species_downActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Exhibits where Name=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, exhibitName);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(exhibitName);
            jTextField_size.setText("" + rs.getInt("Size"));
            jTextField_num_animals.setText("" + numAnimals);
            jTextField_water.setText(rs.getString("WaterFeature"));
            stmt = null;
            sql = "select * from Animals where ExhibitName=? ORDER BY Species DESC";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, exhibitName);
            rs = stmt.executeQuery();
            int i = 0;
            String value;
            while (rs.next()) {
                for (int j = 0; j < 2; j++) {
                    if (j == 0) {
                        value = rs.getString("Name");
                    } else {
                       value = rs.getString("Species");
                    }
                    jTable1.getModel().setValueAt(value, i, j);
                }
                i++;
            }
                
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_species_downActionPerformed

    /**
     * @param args the command line arguments
     */
    public void fillValues() {
        //fill text boxes
        //System.out.println("FILLING VALUES");
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Exhibits where Name=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, exhibitName);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(exhibitName);
            jTextField_size.setText("" + rs.getInt("Size"));
            jTextField_num_animals.setText("" + numAnimals);
            jTextField_water.setText(rs.getString("WaterFeature"));
            stmt = null;
            sql = "select * from Animals where ExhibitName=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, exhibitName);
            rs = stmt.executeQuery();
            int i = 0;
            String value;
            while (rs.next()) {
                for (int j = 0; j < 2; j++) {
                    if (j == 0) {
                        value = rs.getString("Name");
                    } else {
                       value = rs.getString("Species");
                    }
                    jTable1.getModel().setValueAt(value, i, j);
                }
                i++;
            }
                
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visitor_Exhibit_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visitor_Exhibit_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visitor_Exhibit_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visitor_Exhibit_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Visitor_Exhibit_Detail("","", -1).setVisible(true);
                
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_home;
    private javax.swing.JButton jButton_log_view;
    private javax.swing.JButton jButton_log_visit;
    private javax.swing.JButton jButton_name_down;
    private javax.swing.JButton jButton_name_up;
    private javax.swing.JButton jButton_species_down;
    private javax.swing.JButton jButton_species_up;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_name;
    private javax.swing.JTextField jTextField_num_animals;
    private javax.swing.JTextField jTextField_size;
    private javax.swing.JTextField jTextField_water;
    private java.awt.Label text_atlanta_zoo3;
    private java.awt.Label text_exhibit_detail;
    private java.awt.Label text_name;
    private java.awt.Label text_num_animals;
    private java.awt.Label text_size;
    private java.awt.Label text_water;
    // End of variables declaration//GEN-END:variables
}
