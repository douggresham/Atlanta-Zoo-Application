
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gresh
 */
public class Staff_Log_Animal_Detail extends javax.swing.JFrame {
    private String name;
    private String species;
    private String staffUsername;
    /**
     * Creates new form Log_Animal_Detail
     */
    public Staff_Log_Animal_Detail(String name, String species, String staffUsername) {
        initComponents();
        this.name = name;
        this.species = species;
        this.staffUsername = staffUsername;
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        fillValues();
    }
    public void fillValues() {
        //fill text boxes
        //System.out.println("FILLING VALUES");
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Animals where Name=? and Species=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(name);
            jTextField_species.setText(species);
            jTextField_type.setText(rs.getString("AnimalType"));
            jTextField_exhibit.setText(rs.getString("ExhibitName"));
            jTextField_age.setText("" + rs.getInt("Age"));
            stmt = null;
            sql = "select * from Notes where AnimalName=? and Species=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            rs = stmt.executeQuery();
            Object value = null;
            int i = 0;
            while (rs.next()) {
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = rs.getString("Staff");
                    } else if (j == 1) {
                        value = rs.getString("Details");
                    } else {
                        value = rs.getObject("NoteTime");
                    }
                    jTable.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        text_age = new java.awt.Label();
        text_animal_detail = new java.awt.Label();
        text_atlanta_zoo = new java.awt.Label();
        text_exhibit = new java.awt.Label();
        text_species = new java.awt.Label();
        text_type = new java.awt.Label();
        text_name = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_notes = new javax.swing.JTextArea();
        jButton_log_notes = new javax.swing.JButton();
        jTextField_exhibit = new javax.swing.JTextField();
        jTextField_name = new javax.swing.JTextField();
        jTextField_species = new javax.swing.JTextField();
        jTextField_type = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jTextField_age = new javax.swing.JTextField();
        jButton_home = new javax.swing.JButton();
        jButton_staff_up = new javax.swing.JButton();
        jButton_staff_down = new javax.swing.JButton();
        jButton_note_up = new javax.swing.JButton();
        jButton_note_down = new javax.swing.JButton();
        jButton_time_up2 = new javax.swing.JButton();
        jButton_time_down2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        setResizable(false);

        text_age.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        text_age.setText("Age");

        text_animal_detail.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        text_animal_detail.setName(""); // NOI18N
        text_animal_detail.setText("Animal Detail");

        text_atlanta_zoo.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        text_atlanta_zoo.setName(""); // NOI18N
        text_atlanta_zoo.setText("Atlanta Zoo");

        text_exhibit.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        text_exhibit.setText("Exhibit");

        text_species.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        text_species.setText("Species");

        text_type.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        text_type.setText("Type");

        text_name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        text_name.setText("Name");

        jTextArea_notes.setColumns(20);
        jTextArea_notes.setRows(5);
        jScrollPane1.setViewportView(jTextArea_notes);

        jButton_log_notes.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton_log_notes.setText("Log Notes");
        jButton_log_notes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_log_notesMouseClicked(evt);
            }
        });

        jTextField_exhibit.setEditable(false);

        jTextField_name.setEditable(false);

        jTextField_species.setEditable(false);

        jTextField_type.setEditable(false);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Staff Member", "Note", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable);

        jTextField_age.setEditable(false);

        jButton_home.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton_home.setText("Home");
        jButton_home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_homeMouseClicked(evt);
            }
        });

        jButton_staff_up.setBackground(new java.awt.Color(255, 255, 255));
        jButton_staff_up.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_staff_up.setText("▲");
        jButton_staff_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_staff_upActionPerformed(evt);
            }
        });

        jButton_staff_down.setBackground(new java.awt.Color(255, 255, 255));
        jButton_staff_down.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_staff_down.setText("▼");
        jButton_staff_down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_staff_downActionPerformed(evt);
            }
        });

        jButton_note_up.setBackground(new java.awt.Color(255, 255, 255));
        jButton_note_up.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_note_up.setText("▲");
        jButton_note_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_note_upActionPerformed(evt);
            }
        });

        jButton_note_down.setBackground(new java.awt.Color(255, 255, 255));
        jButton_note_down.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_note_down.setText("▼");
        jButton_note_down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_note_downActionPerformed(evt);
            }
        });

        jButton_time_up2.setBackground(new java.awt.Color(255, 255, 255));
        jButton_time_up2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_time_up2.setText("▲");
        jButton_time_up2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_time_up2ActionPerformed(evt);
            }
        });

        jButton_time_down2.setBackground(new java.awt.Color(255, 255, 255));
        jButton_time_down2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_time_down2.setText("▼");
        jButton_time_down2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_time_down2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(text_atlanta_zoo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(text_species, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(jTextField_species, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(82, 82, 82)
                                        .addComponent(text_animal_detail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton_staff_up)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton_staff_down))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(text_exhibit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(text_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jTextField_name)
                                                        .addComponent(jTextField_exhibit, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jButton_log_notes))
                                                .addGap(29, 29, 29)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(113, 113, 113)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jTextField_age, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextField_type, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addComponent(text_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(text_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(109, 109, 109)
                                        .addComponent(jButton_note_up)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton_note_down)
                                        .addGap(106, 106, 106)
                                        .addComponent(jButton_time_up2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton_time_down2)))))
                        .addContainerGap(142, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_home)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text_atlanta_zoo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_animal_detail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(text_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextField_species, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(text_species, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(text_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(text_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField_exhibit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_exhibit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_log_notes)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_staff_down, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_staff_up, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_note_down, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_note_up, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_time_down2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_time_up2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_home)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_homeMouseClicked
        Staff_Main main = new Staff_Main(staffUsername);
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton_homeMouseClicked

    private void jButton_log_notesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_log_notesMouseClicked
        String notes = jTextArea_notes.getText();
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            if(!con.isClosed())
                System.out.println("Successfully connected to " +
                "MySQL server using TCP/IP...");
                Statement myStmt = null;
                ResultSet myRs = null;
                myStmt = con.createStatement();
                String query = " insert into Notes (Staff, NoteTime, AnimalName, Species, Details)"
                + " values (?, ?, ?, ?, ?)";

                // create the mysql insert preparedstatement
                PreparedStatement preparedStmt = con.prepareStatement(query);
                preparedStmt.setString (1, staffUsername);
                preparedStmt.setObject (2, new Date());
                preparedStmt.setString (3, name);
                preparedStmt.setString (4, species);
                preparedStmt.setString (5, notes);
                preparedStmt.execute();
        } catch(Exception e) {
            System.err.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
        fillValues();
    }//GEN-LAST:event_jButton_log_notesMouseClicked

    private void jButton_staff_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_staff_upActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Animals where Name=? and Species=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(name);
            jTextField_species.setText(species);
            jTextField_type.setText(rs.getString("AnimalType"));
            jTextField_exhibit.setText(rs.getString("ExhibitName"));
            jTextField_age.setText("" + rs.getInt("Age"));
            stmt = null;
            sql = "select * from Notes where AnimalName=? and Species=? ORDER BY Staff ASC";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            rs = stmt.executeQuery();
            Object value = null;
            int i = 0;
            while (rs.next()) {
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = rs.getString("Staff");
                    } else if (j == 1) {
                        value = rs.getString("Details");
                    } else {
                        value = rs.getObject("NoteTime");
                    }
                    jTable.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_staff_upActionPerformed

    private void jButton_staff_downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_staff_downActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Animals where Name=? and Species=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(name);
            jTextField_species.setText(species);
            jTextField_type.setText(rs.getString("AnimalType"));
            jTextField_exhibit.setText(rs.getString("ExhibitName"));
            jTextField_age.setText("" + rs.getInt("Age"));
            stmt = null;
            sql = "select * from Notes where AnimalName=? and Species=? ORDER BY Staff DESC";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            rs = stmt.executeQuery();
            Object value = null;
            int i = 0;
            while (rs.next()) {
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = rs.getString("Staff");
                    } else if (j == 1) {
                        value = rs.getString("Details");
                    } else {
                        value = rs.getObject("NoteTime");
                    }
                    jTable.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_staff_downActionPerformed

    private void jButton_note_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_note_upActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Animals where Name=? and Species=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(name);
            jTextField_species.setText(species);
            jTextField_type.setText(rs.getString("AnimalType"));
            jTextField_exhibit.setText(rs.getString("ExhibitName"));
            jTextField_age.setText("" + rs.getInt("Age"));
            stmt = null;
            sql = "select * from Notes where AnimalName=? and Species=? ORDER BY Details ASC";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            rs = stmt.executeQuery();
            Object value = null;
            int i = 0;
            while (rs.next()) {
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = rs.getString("Staff");
                    } else if (j == 1) {
                        value = rs.getString("Details");
                    } else {
                        value = rs.getObject("NoteTime");
                    }
                    jTable.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_note_upActionPerformed

    private void jButton_note_downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_note_downActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Animals where Name=? and Species=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(name);
            jTextField_species.setText(species);
            jTextField_type.setText(rs.getString("AnimalType"));
            jTextField_exhibit.setText(rs.getString("ExhibitName"));
            jTextField_age.setText("" + rs.getInt("Age"));
            stmt = null;
            sql = "select * from Notes where AnimalName=? and Species=? ORDER BY Details DESC";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            rs = stmt.executeQuery();
            Object value = null;
            int i = 0;
            while (rs.next()) {
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = rs.getString("Staff");
                    } else if (j == 1) {
                        value = rs.getString("Details");
                    } else {
                        value = rs.getObject("NoteTime");
                    }
                    jTable.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_note_downActionPerformed

    private void jButton_time_up2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_time_up2ActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Animals where Name=? and Species=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(name);
            jTextField_species.setText(species);
            jTextField_type.setText(rs.getString("AnimalType"));
            jTextField_exhibit.setText(rs.getString("ExhibitName"));
            jTextField_age.setText("" + rs.getInt("Age"));
            stmt = null;
            sql = "select * from Notes where AnimalName=? and Species=? ORDER BY NoteTime ASC";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            rs = stmt.executeQuery();
            Object value = null;
            int i = 0;
            while (rs.next()) {
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = rs.getString("Staff");
                    } else if (j == 1) {
                        value = rs.getString("Details");
                    } else {
                        value = rs.getObject("NoteTime");
                    }
                    jTable.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_time_up2ActionPerformed

    private void jButton_time_down2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_time_down2ActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
            "cs4400_group8",
            "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "select * from Animals where Name=? and Species=?";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            jTextField_name.setText(name);
            jTextField_species.setText(species);
            jTextField_type.setText(rs.getString("AnimalType"));
            jTextField_exhibit.setText(rs.getString("ExhibitName"));
            jTextField_age.setText("" + rs.getInt("Age"));
            stmt = null;
            sql = "select * from Notes where AnimalName=? and Species=? ORDER BY NoteTime DESC";
            stmt = con.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, species);
            rs = stmt.executeQuery();
            Object value = null;
            int i = 0;
            while (rs.next()) {
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = rs.getString("Staff");
                    } else if (j == 1) {
                        value = rs.getString("Details");
                    } else {
                        value = rs.getObject("NoteTime");
                    }
                    jTable.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.out.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_time_down2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Staff_Log_Animal_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Staff_Log_Animal_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Staff_Log_Animal_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Staff_Log_Animal_Detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Staff_Log_Animal_Detail("", "", "").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_home;
    private javax.swing.JButton jButton_log_notes;
    private javax.swing.JButton jButton_note_down;
    private javax.swing.JButton jButton_note_up;
    private javax.swing.JButton jButton_staff_down;
    private javax.swing.JButton jButton_staff_up;
    private javax.swing.JButton jButton_time_down2;
    private javax.swing.JButton jButton_time_up2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextArea jTextArea_notes;
    private javax.swing.JTextField jTextField_age;
    private javax.swing.JTextField jTextField_exhibit;
    private javax.swing.JTextField jTextField_name;
    private javax.swing.JTextField jTextField_species;
    private javax.swing.JTextField jTextField_type;
    private java.awt.Label text_age;
    private java.awt.Label text_animal_detail;
    private java.awt.Label text_atlanta_zoo;
    private java.awt.Label text_exhibit;
    private java.awt.Label text_name;
    private java.awt.Label text_species;
    private java.awt.Label text_type;
    // End of variables declaration//GEN-END:variables
}
