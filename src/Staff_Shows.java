
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gresh
 */
public class Staff_Shows extends javax.swing.JFrame {
    private String staffUsername;
    /**
     * Creates new form Staff_Shows
     */
    public Staff_Shows(String username) {
        initComponents();
        this.staffUsername = username;
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        fillValues();
    }
    
    public void fillValues() {
        
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
                "cs4400_group8",
                "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "SELECT * FROM Shows WHERE Staff = ?";
            stmt = con.prepareStatement(sql);
            
            //System.out.println(staffUsername);
            stmt.setString(1, staffUsername);
            ResultSet myRs = stmt.executeQuery();
            //clear table
            for (int i = 0; i < 25; i++) {
                for (int j = 0; j < 3; j++) {
                    jTable1.getModel().setValueAt(null, i, j);   
                }
            }
            int i = 0;
            Object value = null;
            while (myRs.next()) {
                System.out.println("EX");
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = myRs.getString("Name");
                    } else if (j == 1) {
                        value = myRs.getString("ShowTime");
                    } else {
                        value = myRs.getString("ExhibitName");
                    }
                    jTable1.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.err.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        text_atlanta_zoo1 = new java.awt.Label();
        text_show_history = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton_home = new javax.swing.JButton();
        jButton_name_up = new javax.swing.JButton();
        jButton_name_down = new javax.swing.JButton();
        jButton_time_up = new javax.swing.JButton();
        jButton_time_down = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        setResizable(false);

        text_atlanta_zoo1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        text_atlanta_zoo1.setName(""); // NOI18N
        text_atlanta_zoo1.setText("Atlanta Zoo");

        text_show_history.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        text_show_history.setName(""); // NOI18N
        text_show_history.setText("Staff - Show History");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Time", "Exhibit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton_home.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton_home.setText("Home");
        jButton_home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_homeMouseClicked(evt);
            }
        });

        jButton_name_up.setBackground(new java.awt.Color(255, 255, 255));
        jButton_name_up.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_name_up.setText("▲");
        jButton_name_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_name_upActionPerformed(evt);
            }
        });

        jButton_name_down.setBackground(new java.awt.Color(255, 255, 255));
        jButton_name_down.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_name_down.setText("▼");
        jButton_name_down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_name_downActionPerformed(evt);
            }
        });

        jButton_time_up.setBackground(new java.awt.Color(255, 255, 255));
        jButton_time_up.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_time_up.setText("▲");
        jButton_time_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_time_upActionPerformed(evt);
            }
        });

        jButton_time_down.setBackground(new java.awt.Color(255, 255, 255));
        jButton_time_down.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton_time_down.setText("▼");
        jButton_time_down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_time_downActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton_home)
                        .addGap(72, 72, 72))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_name_up)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_name_down))
                    .addComponent(text_atlanta_zoo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(text_show_history, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jButton_time_up)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_time_down)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(text_show_history, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_atlanta_zoo1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_name_down, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_name_up, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_time_down, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_time_up, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_home)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_homeMouseClicked
        Staff_Main main = new Staff_Main(staffUsername);
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton_homeMouseClicked

    private void jButton_name_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_name_upActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
                "cs4400_group8",
                "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "SELECT * FROM Shows WHERE Staff = ? ORDER BY Name ASC";
            stmt = con.prepareStatement(sql);
            
            //System.out.println(staffUsername);
            stmt.setString(1, staffUsername);
            ResultSet myRs = stmt.executeQuery();
            //clear table
            for (int i = 0; i < 25; i++) {
                for (int j = 0; j < 3; j++) {
                    jTable1.getModel().setValueAt(null, i, j);   
                }
            }
            int i = 0;
            Object value = null;
            while (myRs.next()) {
                System.out.println("EX");
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = myRs.getString("Name");
                    } else if (j == 1) {
                        value = myRs.getString("ShowTime");
                    } else {
                        value = myRs.getString("ExhibitName");
                    }
                    jTable1.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.err.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_name_upActionPerformed

    private void jButton_name_downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_name_downActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
                "cs4400_group8",
                "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "SELECT * FROM Shows WHERE Staff = ? ORDER BY Name DESC";
            stmt = con.prepareStatement(sql);
            
            //System.out.println(staffUsername);
            stmt.setString(1, staffUsername);
            ResultSet myRs = stmt.executeQuery();
            //clear table
            for (int i = 0; i < 25; i++) {
                for (int j = 0; j < 3; j++) {
                    jTable1.getModel().setValueAt(null, i, j);   
                }
            }
            int i = 0;
            Object value = null;
            while (myRs.next()) {
                System.out.println("EX");
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = myRs.getString("Name");
                    } else if (j == 1) {
                        value = myRs.getString("ShowTime");
                    } else {
                        value = myRs.getString("ExhibitName");
                    }
                    jTable1.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.err.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_name_downActionPerformed

    private void jButton_time_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_time_upActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
                "cs4400_group8",
                "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "SELECT * FROM Shows WHERE Staff = ? ORDER BY ShowTime ASC";
            stmt = con.prepareStatement(sql);
            
            //System.out.println(staffUsername);
            stmt.setString(1, staffUsername);
            ResultSet myRs = stmt.executeQuery();
            //clear table
            for (int i = 0; i < 25; i++) {
                for (int j = 0; j < 3; j++) {
                    jTable1.getModel().setValueAt(null, i, j);   
                }
            }
            int i = 0;
            Object value = null;
            while (myRs.next()) {
                System.out.println("EX");
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = myRs.getString("Name");
                    } else if (j == 1) {
                        value = myRs.getString("ShowTime");
                    } else {
                        value = myRs.getString("ExhibitName");
                    }
                    jTable1.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.err.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_time_upActionPerformed

    private void jButton_time_downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_time_downActionPerformed
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_group8",
                "cs4400_group8",
                "l5sU95me");
            PreparedStatement stmt = null;
            String sql = "SELECT * FROM Shows WHERE Staff = ? ORDER BY ShowTime DESC";
            stmt = con.prepareStatement(sql);
            
            //System.out.println(staffUsername);
            stmt.setString(1, staffUsername);
            ResultSet myRs = stmt.executeQuery();
            //clear table
            for (int i = 0; i < 25; i++) {
                for (int j = 0; j < 3; j++) {
                    jTable1.getModel().setValueAt(null, i, j);   
                }
            }
            int i = 0;
            Object value = null;
            while (myRs.next()) {
                System.out.println("EX");
                for (int j = 0; j < 3; j++) {
                    if (j == 0) {
                        value = myRs.getString("Name");
                    } else if (j == 1) {
                        value = myRs.getString("ShowTime");
                    } else {
                        value = myRs.getString("ExhibitName");
                    }
                    jTable1.getModel().setValueAt(value, i, j);
                }
                i++; //move to next result
            }
        } catch(Exception e) {
            System.err.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        } 
    }//GEN-LAST:event_jButton_time_downActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Staff_Shows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Staff_Shows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Staff_Shows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Staff_Shows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Staff_Shows("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_home;
    private javax.swing.JButton jButton_name_down;
    private javax.swing.JButton jButton_name_up;
    private javax.swing.JButton jButton_time_down;
    private javax.swing.JButton jButton_time_up;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.Label text_atlanta_zoo1;
    private java.awt.Label text_show_history;
    // End of variables declaration//GEN-END:variables
}
